# Bootstrap host not in inventory
- hosts: localhost
  gather_facts: no
  tags: bootstrap-new
  tasks:
    - pause:
        prompt: IP address to bootstrap
        echo: yes
      register: target_host
    - add_host:
        name: "{{ target_host.user_input }}"
        groups: setup
      changed_when: False

# Bootstrap single host from inventory
- hosts: localhost
  gather_facts: no
  tags: bootstrap-host
  tasks:
    - pause:
        prompt: Inventory host to bootstrap
        echo: yes
      register: target_host
    - ansible.builtin.assert:
        fail_msg: "{{ target_host.user_input }} is not a valid host in the inventory" 
        that: target_host.user_input in hostvars
    - add_host:
        name: "{{ target_host.user_input }}"
        groups: setup
      changed_when: False

# Bootstrap group from inventory
- hosts: localhost
  gather_facts: no
  tags: bootstrap-group
  tasks:
    - pause:
        prompt: Inventory group to bootstrap
        echo: yes
      register: target_host
    - ansible.builtin.assert:
        fail_msg: "{{ target_host.user_input }} is not a valid group in the inventory" 
        that: target_host.user_input in groups
    - add_host:
        name: "{{ item }}"
        groups: setup
      loop: "{{ groups[target_host.user_input] }}"
      changed_when: False

# Bootstrap all hosts in inventory
- hosts: localhost
  gather_facts: no
  tags: bootstrap-all
  tasks:
    - add_host:
        name: '{{ item }}'
        groups: setup
      loop: "{{ groups.all }}"

# Check Ansible can connect
- hosts: setup
  gather_facts: no
  serial: 1
  tags:
    - bootstrap-new
    - bootstrap-host
    - bootstrap-group
    - bootstrap-all
  tasks:
    - include_tasks: tasks/check-ansible-user.yaml

# Verify Python path
- hosts: setup
  gather_facts: no
  tags: bootstrap-new
  tasks:
    - pause:
        prompt: "Path to Python executable (Current: auto detect)"
        echo: yes
      register: python
    - set_fact:
        ansible_python_interpreter: "{{ python.user_input }}"
      when: python.user_input != ''

# Standard bootstrap
- hosts: setup
  tags:
    - bootstrap-new
    - bootstrap-host
    - bootstrap-group
    - bootstrap-all
  tasks:
    - include_tasks: tasks/setup.yaml

# Additional new host tasks
- hosts: setup
  tags: bootstrap-new
  tasks:
    - pause:
        prompt: "Desired hostname (Current: {{ ansible_hostname }})"
        echo: yes
      register: hostname
    - ansible.builtin.hostname:
        name: "{{ hostname.user_input }}"
      when: hostname.user_input != ''
